title: Deployment Hardware Adapter (DHA)
# DHA API version supported
version: 1.1
created: Fri May  8 08:03:49 UTC 2015
comment: Config for LF Pod1

# Adapter to use for this definition
adapter: ipmi

# Node list.
# Mandatory properties are id and role.
# The MAC address of the PXE boot interface for Fuel is not
# mandatory to be defined.
# All other properties are adapter specific.

nodes:
- id: 1
  pxeMac: 00:25:b5:b0:00:ef
  ipmiIp: 172.30.8.69
  ipmiUser: admin
  ipmiPass: octopus
- id: 2
  pxeMac: 00:25:b5:b0:00:cf
  ipmiIp: 172.30.8.78
  ipmiUser: admin
  ipmiPass: octopus
- id: 3
  pxeMac: 00:25:b5:b0:00:8f
  ipmiIp: 172.30.8.68
  ipmiUser: admin
  ipmiPass: octopus
- id: 4
  pxeMac: 00:25:b5:b0:00:6f
  ipmiIp: 172.30.8.77
  ipmiUser: admin
  ipmiPass: octopus
- id: 5
  pxeMac: 00:25:b5:b0:00:4f
  ipmiIp: 172.30.8.67
  ipmiUser: admin
  ipmiPass: octopus
# Adding the Fuel node as node id 6 which may not be correct - please
# adjust as needed.
- id: 6
  pxeMac: 52:54:00:dd:9c:43
  libvirtName: fuel-opnfv
  isFuel: yes

# Deployment power on strategy
# all:      Turn on all nodes at once. There will be no correlation
#           between the DHA and DEA node numbering. MAC addresses
#           will be used to select the node roles though.
# sequence: Turn on the nodes in sequence starting with the lowest order
#           node and wait for the node to be detected by Fuel. Not until
#           the node has been detected and assigned a role will the next
#           node be turned on.
powerOnStrategy: sequence

# If fuelCustomInstall is set to true, Fuel is assumed to be installed by
# calling the DHA adapter function "dha_fuelCustomInstall()"  with two
# arguments: node ID and the ISO file name to deploy. The custom install
# function is then to handle all necessary logic to boot the Fuel master
# from the ISO and then return.
# Allowed values: true, false

fuelCustomInstall: true
